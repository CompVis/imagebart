model:
  base_learning_rate: 0.0625
  target: imagebart.models.diffusion.DenoisingXTransformer
  params:
    first_stage_key: "image"
    monitor: "val/loss"
    n_scales: 4
    single_scale: 2
    top_k: 548
    alpha: 0.0
    redraw_prob: geometric
    use_ema: True

    scheduler_config:
      target: imagebart.lr_scheduler.LambdaWarmUpCosineScheduler
      params:
        verbosity_interval: 0   # 0 or negative to disable
        warm_up_steps: 10000
        max_decay_steps: 1500001
        lr_start: 2.5e-6
        lr_max: 1.0e-4
        lr_min: 1.0e-8

    transformer_config:
      target: imagebart.modules.xtransformers.x_transformer.ResidualScaledXTransformer
      params:
        scale_pos: 0
        n_scales: 4
        xt_start: 1
        xt_size: 256   # predict x_{t-1}
        wrap_decoder: False
        dim: 752
        enc_num_tokens: 548
        enc_depth: 18
        enc_heads: 16
        enc_max_seq_len: 257
        dec_num_tokens: 548
        dec_depth: 6
        dec_heads: 16
        tie_token_emb: False
        dec_max_seq_len: 256

    first_stage_config:
      target: imagebart.models.vqgan.VQGANWrapper
      params:
        ckpt_path: vqgan/vqgan-ffhq.ckpt
        remap: "data/vqgan_indices/ffhq_indices.npy"
        sane_index_shape: True
        embed_dim: 256
        n_embed: 1024
        ddconfig:
          double_z: false
          z_channels: 256
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult: [ 1,1,2,2,4 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 2
          attn_resolutions: [ 16 ]
          dropout: 0.0
        lossconfig:
          target: taming.modules.losses.vqperceptual.DummyLoss

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 16
    num_workers: 32
    wrap: False
    train:
      target: taming.data.faceshq.FFHQTrain
      params:
        size: 256
    validation:
      target: taming.data.faceshq.FFHQValidation
      params:
        size: 256

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000
        max_images: 4
        increase_log_steps: False
  trainer:
    benchmark: True
